---
export interface Event {
  id?: string;
  series?: string;
  date: string;
  name: string;
  speakers?: string[];
  links?: Record<string, string>;
  participants?: number;
  affiliations?: string[];
  summary?: string;
  [key: string]: any;
}

export interface Props {
  events: Event[];
}

const { events } = Astro.props;
---

<div class="space-y-6">
  {events.map((event) => (
    <div class="relative pl-8 pb-6 border-l-2 border-orange-500/30 last:border-0">
      <div class="absolute -left-[9px] top-0 w-4 h-4 bg-orange-500 rounded-full"></div>
      
      <div class="text-sm text-slate-400 mb-1">{event.date}</div>
      <h3 class="text-lg font-semibold text-white mb-2">{event.name}</h3>
      
      {event.speakers && event.speakers.length > 0 && (
        <div class="text-slate-300 mb-2">
          {event.speakers.join(', ')}
        </div>
      )}
      
      {event.links && event.links.event && (
        <a 
          href={event.links.event}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-1 text-sm text-orange-400 hover:text-orange-300"
        >
          View details
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      )}
    </div>
  ))}
</div>